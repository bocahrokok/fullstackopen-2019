{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","console","log","length","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","require","createServer","req","res","writeHead","end","listen","ReactDOM","render","document","getElementById"],"mappings":"6PAeeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACf,qBAAuB,iBAE7B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAjB,IAAsCC,EAAtC,O,iBCVAK,EAAU,8BAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCA5BK,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,yBAAKd,UAAU,SACZc,I,4NCHP,IAgGeC,EAhGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,QAAQC,IAAI,SAAUT,EAAMU,OAAQ,SAEpCC,oBAAU,WACRC,IAEGvB,KAAK,SAAAwB,GACJZ,EAASY,MAEZ,IAEH,IAAMC,EAAcV,EAChBJ,EACAA,EAAMe,OAAO,SAAApC,GAAI,OAAIA,EAAKG,YAGxBkC,EAAqB,SAAAtB,GACzB,IAAMf,EAAOqB,EAAMiB,KAAK,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,IAChCyB,E,qVAAW,IAAQxC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD8B,EACUlB,EAAIyB,GAAa9B,KAAK,SAAA+B,GAC5BnB,EAASD,EAAMqB,IAAI,SAAA1C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOyC,OAEpDE,MAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGfwC,WAAW,WACTjB,EAAgB,OACf,KACHN,EAASD,EAAMe,OAAO,SAAAG,GAAC,OAAIA,EAAExB,KAAOA,QAmC1C,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAcG,QAASS,IAEvB,6BACE,4BAAQrB,QAAS,kBAAMoB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BA1CeU,EAAYO,IAAI,SAAA1C,GAAI,OACrC,kBAAC,EAAD,CACE8C,IAAK9C,EAAKe,GACVf,KAAMA,EACNC,iBAAkB,kBAAMoC,EAAmBrC,EAAKe,UAyChD,0BAAMgC,SAhCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB7C,QAASkB,EACT4B,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,IAG7BtB,EACUiB,GACLxC,KAAK,SAAA+B,GACNnB,EAASD,EAAMmC,OAAOf,IACtBjB,EAAW,QAqBX,2BACEiC,MAAOlC,EACPmC,SAxCiB,SAACV,GACxBnB,QAAQC,IAAIkB,EAAMW,OAAOF,OACzBjC,EAAWwB,EAAMW,OAAOF,UAwCpB,4BAAQG,KAAK,UAAb,W,MC3FKC,EAAQ,IAEJC,aAAa,SAACC,EAAKC,GAClCA,EAAIC,UAAU,IAAK,CAAC,eAAgB,eACpCD,EAAIE,IAAI,iBAKNC,OAFS,MAGbtC,QAAQC,IAAR,iCAHa,OAKbsC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.8aeb3afe.chunk.js","sourcesContent":["import React from 'react'\n\n\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n      ? 'make not important' : 'make important'\n  \n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance} > {label} </button>\n      </li>\n  )\n}\nexport default Note","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  console.log('render', notes.length, 'notes')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  \n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error=>  {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n  \n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n      \n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \nimport './index.css'\n\nconst http = require('http')\n\nconst app = http.createServer((req, res) => {\n  res.writeHead(200, {'Content-Type': 'text/plain'})\n  res.end('Hello World')\n})\n\nconst port = 3001\n\napp.listen(port)\nconsole.log(`Server running on port ${port}`)\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}